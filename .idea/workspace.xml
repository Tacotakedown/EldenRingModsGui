<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CMakePresetLoader"><![CDATA[{
  "useNewFormat": true
}]]></component>
  <component name="CMakeReloadState">
    <option name="reloaded" value="true" />
  </component>
  <component name="CMakeRunConfigurationManager">
    <generated>
      <config projectName="EldenRingModGui" targetName="MinHook" />
      <config projectName="EldenRingModGui" targetName="main" />
      <config projectName="EldenRingModGui" targetName="ImGui" />
    </generated>
  </component>
  <component name="CMakeSettings">
    <configurations>
      <configuration PROFILE_NAME="Debug" ENABLED="true" CONFIG_NAME="Debug" />
    </configurations>
  </component>
  <component name="ChangeListManager">
    <list default="true" id="e5d604ac-bd84-4502-a06a-f400833c04aa" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.vs/DirectX12 Demo/FileContentIndex/0bce34e2-853c-4129-a9e6-0a556e4434e5.vsidx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.vs/DirectX12 Demo/v17/Browse.VC.db" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.vs/DirectX12 Demo/v17/Solution.VC.db" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.vs/EldenRingModGui/FileContentIndex/199b09ec-abaf-4fc2-b2ec-b1b1700723d4.vsidx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.vs/EldenRingModGui/v17/.suo" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.vs/EldenRingModGui/v17/Browse.VC.db" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.vs/EldenRingModGui/v17/DocumentLayout.json" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.vs/EldenRingModGui/v17/Solution.VC.db" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.vs/EldenRingModGui/v17/ipch/AutoPCH/5e721d9c36174137/MAIN.ipch" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.vs/EldenRingModGui/v17/ipch/AutoPCH/864b98a122428291/IMGUI.ipch" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/EldenRingModGui.vcxproj" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/EldenRingModGui.vcxproj.filters" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/EldenRingModGui.vcxproj.user" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imconfig.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_demo.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_draw.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_impl_dx10.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_impl_dx10.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_impl_dx11.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_impl_dx11.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_impl_dx12.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_impl_dx12.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_impl_dx9.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_impl_dx9.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_impl_win32.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_impl_win32.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_internal.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_tables.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imgui_widgets.cpp" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imstb_rectpack.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imstb_textedit.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/ImGui/imstb_truetype.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D2D1.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D2D1Helper.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D2DBaseTypes.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D2Derr.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3D10_1shader.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3D10effect.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3D10shader.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3D11.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3D11SDKLayers.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3D11Shader.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3DCSX.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3DX10.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3DX10core.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3DX10math.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3DX10mesh.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3DX10tex.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3DX11.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3DX11async.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3DX11core.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3DX11tex.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3DX_DXGIFormatConvert.inl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3Dcommon.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/D3Dcompiler.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/DWrite.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/DXGI.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/DXGIFormat.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/DXGIType.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/Dcommon.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/DxErr.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/PIXPlugin.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/X3DAudio.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/XAPO.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/XAPOBase.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/XAPOFX.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/XAudio2.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/XAudio2fx.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/XInput.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/audiodefs.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3d10misc.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3d10sdklayers.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3d9.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3d9caps.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3d9types.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3dx10async.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3dx9.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3dx9anim.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3dx9core.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3dx9effect.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3dx9math.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3dx9math.inl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3dx9mesh.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3dx9shader.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3dx9shape.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3dx9tex.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/d3dx9xof.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/dinput.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/dinputd.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/dsconf.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/dsetup.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/dsound.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/dxdiag.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/dxfile.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/dxsdkver.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/gameux.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/rmxfguid.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/rmxftmpl.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/rpcsal.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/xact3.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/xact3d3.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/xact3wb.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/xnamath.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/xnamathconvert.inl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/xnamathmatrix.inl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/xnamathmisc.inl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Include/xnamathvector.inl" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/D3DCSX.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/D3DCSXd.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/DxErr.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/X3DAudio.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/XAPOFX.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/XInput.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/d2d1.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/d3d10.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/d3d10_1.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/d3d11.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/d3d9.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/d3dcompiler.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/d3dx10.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/d3dx10d.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/d3dx11.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/d3dx11d.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/d3dx9.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/d3dx9d.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/dinput8.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/dsetup.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/dsound.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/dwrite.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/dxgi.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/dxguid.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/xapobase.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/Microsoft DirectX SDK/Lib/x86/xapobased.lib" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/MinHook/Include/MinHook.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/MinHook/Src/buffer.c" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/MinHook/Src/hde/hde32.c" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/MinHook/Src/hde/hde32.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/MinHook/Src/hde/hde64.c" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/MinHook/Src/hde/hde64.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/MinHook/Src/hde/pstdint.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/MinHook/Src/hde/table32.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/MinHook/Src/hde/table64.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/MinHook/Src/hook.c" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/MinHook/Src/trampoline.c" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/dependencies/MinHook/Src/trampoline.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/DirectX12.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/Global.h" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main.h" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/CMakeLists.txt" beforeDir="false" afterPath="$PROJECT_DIR$/CMakeLists.txt" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Config/Config.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Config/Config.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Console/Console.cpp" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/Console/Console.h" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/src/main.cpp" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main.hpp" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ClangdSettings">
    <option name="formatViaClangd" value="false" />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="CMakeBuildProfile:Debug" />
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="CMakeLists.txt" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
  "lastFilter": {
    "state": "OPEN",
    "assignee": "Tacotakedown"
  }
}]]></component>
  <component name="GithubPullRequestsUISettings"><![CDATA[{
  "selectedUrlAndAccountId": {
    "url": "https://github.com/Tacotakedown/EldenRingModsGui.git",
    "accountId": "72a2c804-8c28-44e4-b98a-41a68c53c776"
  }
}]]></component>
  <component name="ProjectApplicationVersion">
    <option name="ide" value="CLion" />
    <option name="majorVersion" value="2024" />
    <option name="minorVersion" value="1.3" />
    <option name="productBranch" value="Classic" />
  </component>
  <component name="ProjectColorInfo"><![CDATA[{
  "customColor": "",
  "associatedIndex": 6
}]]></component>
  <component name="ProjectId" id="2hlkADhBfHvAdMviKLcDuOdUaXU" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.RadMigrateCodeStyle": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.cidr.known.project.marker": "true",
    "RunOnceActivity.readMode.enableVisualFormatting": "true",
    "cf.first.check.clang-format": "false",
    "cidr.known.project.marker": "true",
    "git-widget-placeholder": "master",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "CMakeSettings",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="CMake Application.EldenRingModGui">
    <configuration default="true" type="CLionExternalRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true">
      <method v="2">
        <option name="CLION.EXTERNAL.BUILD" enabled="true" />
      </method>
    </configuration>
    <configuration name="EldenRingModGui" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="EldenRingModGui" TARGET_NAME="EldenRingModGui" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="ImGui" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="EldenRingModGui" TARGET_NAME="ImGui" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <configuration name="MinHook" type="CMakeRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" ELEVATE="false" USE_EXTERNAL_CONSOLE="false" EMULATE_TERMINAL="false" PASS_PARENT_ENVS_2="true" PROJECT_NAME="EldenRingModGui" TARGET_NAME="MinHook" CONFIG_NAME="Debug">
      <method v="2">
        <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
      </method>
    </configuration>
    <list>
      <item itemvalue="CMake Application.EldenRingModGui" />
      <item itemvalue="CMake Application.ImGui" />
      <item itemvalue="CMake Application.MinHook" />
    </list>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e5d604ac-bd84-4502-a06a-f400833c04aa" name="Changes" comment="" />
      <created>1718175906648</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1718175906648</updated>
      <workItem from="1718175908063" duration="1597000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VCPKGProject">
    <isAutomaticCheckingOnLaunch value="false" />
    <isAutomaticFoundErrors value="true" />
    <isAutomaticReloadCMake value="true" />
  </component>
</project>